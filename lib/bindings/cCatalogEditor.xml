<?xml version="1.0"?>
<bindings xmlns="http://www.mozilla.org/xbl" xmlns:xbl="http://www.mozilla.org/xbl" xmlns:html="http://www.w3.org/1999/xhtml"
	xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
	<binding id="cResumeUrlrewritingByShopSection" extends="layout.cDocumentEditor#cResumeSection">
		<implementation>
			<method name="setValues">
				<parameter name="values" />
				<body><![CDATA[
					this.clearValues();
					var propertyValues = values[this.name];
					if (propertyValues)
					{
						var property;
						for (var i = 0; i < propertyValues.length; i++)
						{
							values = propertyValues[i];
							property = document.createElementNS('http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul', 'xul:cproperty');
							property.setAttribute("propertyname", 'p_' + i);
							if (values.class == 'link')
							{
								property.setAttribute('class', 'link');
							}
							property.setAttribute('label', values.label);					
							this.appendChild(property);
							property.setValue(values.href);
						}
					}		
				]]></body>
			</method>

			<method name="clearValues">
				<body><![CDATA[
					this.mPoperties = [];
					while (this.childNodes.length > 0)
					{
						this.removeChild(this.childNodes[this.childNodes.length-1]);
					}
				]]></body>
			</method>
		</implementation>
	</binding>

	<!-- Product suggestions. -->

	<binding id="cProductSuggestionField" extends="form.cField#cDocumentArrayField">
		<content>
			<xul:hbox xbl:inherits="context" flex="1">
				<xul:listbox anonid="internalcontrol" rows="5" seltype="single" width="200" xbl:inherits="disabled,tabindex,accesskey,rows,width=editwidth"
					ondragenter="document.getBindingParent(this).dragEnter(event)" ondragover="document.getBindingParent(this).dragOver(event)" ondrop="document.getBindingParent(this).drop(event)" />
				<xul:toolbar orient="vertical">
					<xul:toolbarbutton anonid="deletebutton" image="chrome://global/skin/icons/error-16.png" disabled="true"
						xbl:inherits="disabled" oncommand="document.getBindingParent(this).removeItem();" />
					<xul:toolbarbutton anonid="moveup" disabled="true" xbl:inherits="disabled,hidden=hideorder" tooltiptext="&amp;modules.generic.backoffice.Move-up;"
						image="{IconsBase}/small/arrow-up-blue.png" oncommand="document.getBindingParent(this).moveSelection(-1);" />
					<xul:toolbarbutton anonid="movedown" disabled="true" xbl:inherits="disabled,hidden=hideorder" tooltiptext="&amp;modules.generic.backoffice.Move-down;"
						image="{IconsBase}/small/arrow-down-blue.png" oncommand="document.getBindingParent(this).moveSelection(+1);" />

					<xul:toolbarbutton anonid="selectorbutton" image="{IconsBase}/small/folder.png" xbl:inherits="disabled"
						oncommand="document.getBindingParent(this).openRessourceDialog();" />

					<xul:toolbarbutton anonid="uploadbutton" hidden="true" xbl:inherits="disabled"
						tooltiptext="&amp;modules.uixul.bo.filePicker.BrowseEllipsis;" image="{IconsBase}/small/shadow/folder_add.png" oncommand="document.getBindingParent(this).openFilePicker()" />
				</xul:toolbar>
				<xul:toolbar orient="vertical">
					<xul:toolbarbutton image="{IconsBase}/small/wand.png" tooltiptext="&amp;modules.catalog.bo.doceditor.Suggest-products;"
						xbl:inherits="hidden=hideSuggestionButton" oncommand="openSuggestionDialog();" />
					<xul:toolbarbutton image="chrome://global/skin/icons/question-16.png" xbl:inherits="hidden=hidehelp" oncommand="dispatchFieldEvent('fieldHelp');" />
				</xul:toolbar>
			</xul:hbox>
			<children />
		</content>

		<implementation>
			<method name="openSuggestionDialog">
				<body><![CDATA[
					var wmodule = this.parentNode;
				 	while (wmodule && wmodule.tagName != 'wmodule')
				 	{
				 		wmodule = wmodule.parentNode;
				 	}
				 	if (!wmodule)
				 	{
				 		return ;
				 	}
				 	var params = { alreadySelectedIds: this.value , productId: this.getAttribute('productId'), field: this, defaultMaxResults: 20, defaultFeederClass: this.getAttribute('defaultFeederClass') };
	   				wmodule.getController().openModalDialog(this, 'productSuggestion', params);
				]]></body>
			</method>
		</implementation>
	</binding>

	<binding id="cProductSuggestionDialog" extends="core.wDialog#wDialog">
		<resources>
			<stylesheet src="modules.uixul.cEditorGrid" />
		</resources>

		<implementation>
			<field name="mLoadingRequest">null</field>
			<field name="mCheckboxes">[]</field>

			<constructor><![CDATA[
				wCore.debug('cProductSuggestionDialog.constructor');
			]]></constructor>

			<method name="getElementByAnonId">
				<parameter name="id" />
				<body><![CDATA[
					return document.getAnonymousElementByAttribute(this, 'anonid', id);
				]]></body>
			</method>

			<method name="onInitialize">
				<body><![CDATA[
					this.autoResize(window.innerWidth-100, window.innerHeight-100);
					
					var node = document.getAnonymousElementByAttribute(this, 'anonid', 'field_maxResults');
					node.value = this.parameters.defaultMaxResults;
					
					var node = document.getAnonymousElementByAttribute(this, 'anonid', 'field_feederClass');
					node.value = this.parameters.defaultFeederClass;
				]]></body>
			</method>

			<method name="search">
				<body><![CDATA[
					if (this.mLoadingRequest !== null)
					{
						wCore.debug('[cProductSuggestionDialog.search] Already searching.');
						return;
					}
					var maxResultsField = document.getAnonymousElementByAttribute(this, 'anonid', 'field_maxResults');
					var feederClassField = document.getAnonymousElementByAttribute(this, 'anonid', 'field_feederClass');
					var parameters = {
						productId: this.parameters.productId,
						alreadySelectedIds: this.parameters.alreadySelectedIds,
						maxResults: maxResultsField.value,
						feederClass: feederClassField.value
					};
					
					var me = this;
					var callBack = function(result) { me.updateResults(result);	};
					this.mLoadingRequest = wCore.executeJSON('catalog', 'LoadProductSuggestions', parameters, callBack, true);
				]]></body>
			</method>

			<method name="updateResults">
				<parameter name="result" />
				<body><![CDATA[
					wCore.debug('cProductSuggestionDialog.updateResults');
					try
					{
						this.mLoadingRequest = null;					
						if (result.status === 'OK')
						{	
							this.cleanList()
							var contents = result.contents;
							for (var i = 0; i < contents.nodes.length; i++)
							{
								this.addItem(contents.nodes[i]);
							}
						}
						else
						{
							wToolkit.setNotificationMessage(result.contents.errorMessage, wToolkit.ERROR);
						}
					}
					catch (e)
					{
						wCore.error("cComplementaryDialog.updateResults", [], e);
					}
				]]></body>
			</method>

			<method name="addItem">
				<parameter name="jsnode" />
				<body><![CDATA[
					var row = document.createElement('row');
					row.setAttribute('class', 'document');
					row.setAttribute('documentId', jsnode.id);
										
					var cell = row.appendChild(document.createElement('toolbar'));
					cell.setAttribute('class', 'actions');
					var checkbox = cell.appendChild(document.createElement('checkbox'));
					checkbox.setAttribute('checked', 'false');
					checkbox.setAttribute('label', jsnode.label);
					checkbox.setAttribute('src', '{IconsBase}/small/'+jsnode.icon+'.png');
					checkbox.setAttribute('value', jsnode.id);
					this.mCheckboxes.push(checkbox);
					
					cell = row.appendChild(document.createElement('label'));
					cell.setAttribute('value', jsnode.codeReference);
					
					cell = row.appendChild(document.createElement('label'));
					cell.setAttribute('value', jsnode.weight);

					this.getElementByAnonId('document-rows').appendChild(row);
				]]></body>
			</method>

			<method name="cleanList">
				<body><![CDATA[
					var rows = this.getElementByAnonId('document-rows');
					while (rows.lastChild && rows.lastChild.getAttribute('class') != 'head')  
					{
						rows.removeChild(rows.lastChild);
					}
					this.mCheckboxes = [];
				]]></body>
			</method>

			<method name="selectAll">
				<parameter name="id" />
				<body><![CDATA[
					wCore.debug('cProductSuggestionDialog.selectAll');
					try
					{
						var checkboxes = this.mCheckboxes;
						wCore.debug('cProductSuggestionDialog.selectAll : checkboxes.length = ' + checkboxes.length);
						for (var i = 0; i < checkboxes.length; i++)
						{
							checkboxes[i].checked = true;
						}
					}
					catch (e)
					{
						wCore.error("cComplementaryDialog.updateResults", [], e);
					}
				]]></body>
			</method>

			<method name="unselectAll">
				<parameter name="id" />
				<body><![CDATA[
					wCore.debug('cProductSuggestionDialog.unselectAll');
					try
					{
						var checkboxes = this.mCheckboxes;
						for (var i = 0; i < checkboxes.length; i++)
						{
							checkboxes[i].checked = false;
						}
					}
					catch (e)
					{
						wCore.error("cComplementaryDialog.updateResults", [], e);
					}
				]]></body>
			</method>

			<method name="addSelection">
				<body><![CDATA[
					wCore.debug('cProductSuggestionDialog.addSelection');
					try
					{
						var checkboxes = this.mCheckboxes;
						var currentValue = this.parameters.field.value;
						var ids = currentValue.length ? currentValue.split(',') : [];
						for (var i = 0; i < checkboxes.length; i++)
						{
							var checkbox = checkboxes[i];
							var id = checkbox.getAttribute('value');
							if (checkbox.checked && currentValue.indexOf(id) == -1)
							{
								ids.push(id);
							}
						}
						this.parameters.field.value = ids.join(',');						
						this.closeDialog(true);
					}
					catch (e)
					{
						wCore.error("cComplementaryDialog.updateResults", [], e);
					}
				]]></body>
			</method>

			<method name="closeDialog">
				<parameter name="refesh" />
				<body><![CDATA[
					this.controller.closeModalDialog(true);
					if (refesh && this.sender && 'refresh' in this.sender)
					{
						this.sender.refresh();	
					}
				]]></body>
			</method>
		</implementation>

		<content>
			<xul:vbox flex="1">
				<xul:hbox class="wizardTitle">
					<xul:label value="&amp;modules.catalog.bo.doceditor.dialog.product-suggestion.Title;" />
					<xul:spacer flex="1" />
					<xul:toolbarbutton image="{IconsBase}/small/delete.png" oncommand="closeDialog(false);" />
				</xul:hbox>
				<xul:spacer height="5px" />
				<xul:hbox align="center">
					<xul:label value="Méthode" />
					<xul:cfield anonid="field_feederClass" name="feederClass" fieldtype="dropdownlist" listid="modules_catalog/productsuggestionfeeders"
						hidehelp="true" />
					<xul:label value="Nombre maximum de résultats" />
					<xul:cfield anonid="field_maxResults" name="maxResults" fieldtype="integer" hidehelp="true" />
					<xul:toolbarbutton oncommand="search();" image="{IconsBase}/small/search.png" label="&amp;modules.catalog.bo.doceditor.dialog.product-suggestion.Search;" />
					<xul:spacer flex="1" />
				</xul:hbox>
				<xul:spacer height="5px" />
				<xul:toolbar anonid="result-toolbar">
					<xul:toolbarbutton oncommand="selectAll();" image="{IconsBase}/small/check-box-check.png"
						label="&amp;modules.catalog.bo.doceditor.dialog.product-suggestion.Check-all;" />
					<xul:toolbarbutton oncommand="unselectAll();" image="{IconsBase}/small/check-box-uncheck.png"
						label="&amp;modules.catalog.bo.doceditor.dialog.product-suggestion.Uncheck-all;" />
					<xul:spacer flex="1" />
				</xul:toolbar>
				<xul:scrollbox anonid="scrollctrl" flex="1" class="editordatacontainer" orient="vertical">
					<xul:grid flex="1">
						<xul:columns>
							<xul:column flex="1" />
							<xul:column flex="1" />
							<xul:column flex="1" />
						</xul:columns>
						<xul:rows anonid="document-rows">
							<xul:row class="head">
								<xul:label value="&amp;modules.catalog.bo.doceditor.dialog.product-suggestion.Column-label;" />
								<xul:label value="&amp;modules.catalog.bo.doceditor.dialog.product-suggestion.Column-codeReference;" />
								<xul:label value="&amp;modules.catalog.bo.doceditor.dialog.product-suggestion.Column-weight;" />
							</xul:row>
						</xul:rows>
					</xul:grid>
				</xul:scrollbox>
				<xul:hbox>
					<xul:button image="{IconsBase}/small/check.png" oncommand="addSelection();" label="&amp;modules.uixul.bo.dialog.Apply;" />
				</xul:hbox>
			</xul:vbox>
		</content>
	</binding>



	<!-- Publication in shops dialog -->

	<binding id="cPublicationInShopsDialog" extends="core.wDialog#wDialog">
		<resources>
			<stylesheet src="modules.uixul.cFieldsGroup" />
			<stylesheet src="modules.catalog.cPublicationInShopsDialog" />
		</resources>
		<implementation>
			<constructor><![CDATA[
				wCore.debug("cPublicationInShopsDialog.constructor");
			]]></constructor>

			<method name="onInitialize">
				<body><![CDATA[
					this.autoResize(window.innerWidth-100, window.innerHeight-100);
					
					var result = wCore.executeJSON('catalog', 'LoadProductPublicationInShopInfos', {cmpref: this.parameters.productId}, null, true);
					if (result.status === 'OK')
					{
						var row;
						var section;
						var product;
						var contentsNode = document.getAnonymousElementByAttribute(this, 'anonid', 'contents');
						for (var i = 0; i < result.contents.infos.length; i++)
						{
							section = document.createElementNS('http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul', 'section');
							section.className = 'shop';
							contentsNode.appendChild(section);
							
							row = result.contents.infos[i];
							section.setAttribute('shopLabel', row.shopLabel);
							for (var j = 0; j < row.products.length; j++)
							{
								product = row.products[j];
								section.addRow(product);
							}
						}
					}
					else
					{
						wToolkit.setNotificationMessage(result.contents.errorMessage, wToolkit.ERROR);
					}
				]]></body>
			</method>

			<method name="onCancel">
				<body><![CDATA[
					this.parameters.module.refreshMainViewDeck();
					this.controller.closeModalDialog();
				]]></body>
			</method>
		</implementation>
		<xbl:content>
			<xul:vbox flex="1">
				<xul:hbox class="dialog-header">
					<xul:label value="&amp;modules.catalog.bo.dialog.Publication-in-shops;" class="dialog-title" />
					<xul:spacer flex="1" />
					<xul:vbox pack="center">
						<xul:toolbarbutton height="16" width="16" image="{IconsBase}/small/delete.png" oncommand="onCancel();"
							tooltiptexts="&amp;modules.uixul.bo.dialog.Cancel;" />
					</xul:vbox>
				</xul:hbox>
				<xul:scrollbox flex="1" orient="vertical">
					<xul:description>&amp;modules.catalog.bo.dialog.Product-not-in-shops;</xul:description>
					<xul:vbox flex="1" anonid="contents" />
				</xul:scrollbox>
			</xul:vbox>
		</xbl:content>
	</binding>
	
	<binding id="cPublicationInShopsSection">
		<implementation>
			<constructor><![CDATA[
				wCore.debug("cPublicationInShopsDialog.constructor");
			]]></constructor>
			
			<method name="addRow">
				<parameter name="product" />
				<body><![CDATA[
					var row = document.createElementNS('http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul', 'row');
					row.className = 'product-row';
					
					var label = document.createElementNS('http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul', 'label');
					label.setAttribute('value', product.lang);
					row.appendChild(label);
					
					label = document.createElementNS('http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul', 'label');
					label.setAttribute('value', product.price);
					row.appendChild(label);
					
					label = document.createElementNS('http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul', 'label');
					label.setAttribute('value', product.shelfLabel);
					row.appendChild(label);
					
					label = document.createElementNS('http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul', 'label');
					label.setAttribute('value', product.plublication);
					row.appendChild(label);
					
					document.getAnonymousElementByAttribute(this, 'anonid', 'rows').appendChild(row);
				]]></body>
			</method>
		</implementation>
		<xbl:content>
			<xul:groupbox flex="1">
				<xul:caption flex="1">
					<xul:vbox pack="center"><xul:image src="{IconsBase}/small/shop.png" /></xul:vbox>
					<xul:label xbl:inherits="value=shopLabel" />
				</xul:caption>
				<xul:grid flex="1">
					<xul:columns>
						<xul:column />
						<xul:column />
						<xul:column />
						<xul:column flex="1" />
					</xul:columns>
					<xul:rows anonid="rows">
						<xul:row class="head-row">
							<xul:label value="&amp;modules.catalog.bo.dialog.Column-lang;" />
							<xul:label value="&amp;modules.catalog.bo.dialog.Column-price;" />
							<xul:label value="&amp;modules.catalog.bo.dialog.Column-shelf;" />
							<xul:label value="&amp;modules.catalog.bo.dialog.Column-publication;" />
			            </xul:row>
					</xul:rows>
				</xul:grid>
			</xul:groupbox>
		</xbl:content>
	</binding>
	
	<binding id="cOrderProductsInShelfDialog" extends="widgets.cOrderChildrenDialog#cOrderChildrenDialog">
    	<resources>
    		<stylesheet src="modules.uixul.cDocumentEditor" />
			<stylesheet src="modules.uixul.cOrderChildrenDialog" />
		</resources>
		<implementation>
			<field name="mShopId" />
			
			<method name="onInitialize">
				<body><![CDATA[
					this.autoResize(700, 550);
					this.lockCommandsUI();
					this.initialized = true;
					if (this.mShopId != null)
					{
						this.loadProducts();
					}
				]]></body>
			</method>
			
			<method name="loadProducts">
				<body><![CDATA[
					this.mData = wCore.executeJSON('catalog', 'GetProductsToSort', { shelfId: this.parameters.id, shopId: this.mShopId }, null, true);
					this.mDataOk = true;
					this.loadData();
				]]></body>
			</method>
			
			<method name="executeSave">
				<parameter name="childrenOrder"/>
				<body><![CDATA[
					return wCore.executeJSON('catalog', 'SaveProductOrder', { shelfId: this.parameters.id, shopId: this.mShopId, co: childrenOrder }, null, true);
				]]></body>
			</method>
			
			<method name="onSave">
				<body><![CDATA[
					this.showTextMessage('&modules.uixul.bo.doceditor.Update-in-progress;');
					
					var childrenOrder = this.getChildrenOrder();
					
					var param = this.parameters;
					result =  wCore.executeJSON('catalog', 'SaveProductOrder', { shelfId: this.parameters.id, shopId: this.mShopId, co: childrenOrder }, null, true);
					if (result.status == 'OK')
					{
						this.mData = result;
						this.mDataOk = true;
						this.loadData();
						this.showTextMessage('&modules.catalog.bo.doceditor.Update-success;');
					}
					else
					{
						this.showErrorMessage(result.contents.errorMessage);
					}
				]]></body>
			</method>
		</implementation>
		<handlers>
			<handler event="fieldChanged"><![CDATA[
				if (event.originalTarget.name == 'mShop')
				{
					this.mShopId = event.originalTarget.value;
					if (this.parameters != null)
					{
						this.loadProducts();
					}
				}
				event.stopPropagation();
			]]></handler>
			<handler event="fieldModified"><![CDATA[
				event.stopPropagation();
			]]></handler>
			<handler event="fieldRestored"><![CDATA[
				event.stopPropagation();
			]]></handler>
		</handlers>
		<xbl:content xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul" xmlns:xbl="http://www.mozilla.org/xbl">
			<vbox flex="1">
				<hbox class="dialog-header">
					<label anonid="title" value="&amp;modules.catalog.bo.general.Order-product-in-shelf-panel-title;" class="dialog-title" />
					<spacer flex="1" />
					<vbox pack="center">
						<toolbarbutton image="{IconsBase}/small/delete.png" oncommand="onCancel();" tooltiptexts="&amp;modules.uixul.bo.dialog.Cancel;" />
					</vbox>
				</hbox>
				<xul:cmessageinfo anonid="message" />
				<xul:hbox anonid="action-bar">
					<xul:button anonid="save" oncommand="onSave()" label="&amp;modules.uixul.bo.dialog.Apply;" image="{IconsBase}/small/check.png" />
					<xul:button anonid="delete" oncommand="onCancel()" label="&amp;modules.uixul.bo.dialog.Cancel;" image="{IconsBase}/small/undo.png" />
					<xul:spacer flex="1" />
					<xul:box><xul:cfield anonid="mShop" name="mShop" fieldtype="dropdownlist" hidehelp="true" listid="modules_catalog/shops" initialvalue="" /></xul:box>
				</xul:hbox>
				<xul:scrollbox anonid="scrollctrl" flex="1" class="editordatacontainer" orient="vertical">
					<xul:cdocumentlist anonid="documentlist" flex="1" />
					<xul:spacer flex="1" />
				</xul:scrollbox>				
			</vbox>
		</xbl:content>
	</binding>
	
	<binding id="cProductSelectorDialog" extends="core.wDialog#cRessourceDialog">
		<implementation>
			<field name="mListSubproductConfig">null</field>	
			<constructor><![CDATA[
				wCore.debug("cProductSelectorDialog.constructor");
			]]></constructor>
		</implementation>
		
		<handlers>
			<handler event="ressourcestreechange"><![CDATA[
				if (this.mListSubproductConfig == null)
				{
					this.mListSubproductConfig = {"module":"catalog", "models":{"modules_catalog/declinedproduct":{"modules_catalog/productdeclination":"product"}}};
					this.mListTree.mTypeList['modules_catalog/declinedproduct'] = true;
				}
			]]></handler>
			
			<handler event="select"><![CDATA[
				var lst = event.originalTarget;
				while (lst !== this.mListTree) 
				{	
					lst = lst.parentNode;
					if (!lst) {return;}
				}
				var items = lst.getSelectedItems();
				if (items.length === 1)
				{
					var list = this.getElementByAnonId('list_subproduct');
					if (items[0].modelName === 'modules_catalog/declinedproduct')
					{	
						list.setCurrentConfig(this.mListSubproductConfig);
						list.loadNode(items[0].id, items[0].modelName);
					}
					else
					{
						list.clearTreeChildren(list.treeChildren);
					}
				}
			]]></handler>	
		</handlers>
		<xbl:content xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:xbl="http://www.mozilla.org/xbl">
			<vbox flex="1">
				<hbox class="dialog-header">
					<label value="&amp;modules.uixul.bo.dialog.Select-ressources;" class="dialog-title" />
					<spacer flex="1" />
					<vbox pack="center">
						<toolbarbutton height="16" width="16" image="{IconsBase}/small/delete.png" oncommand="onCancel();" tooltiptexts="&amp;modules.uixul.bo.dialog.Cancel;" />
					</vbox>
				</hbox>
				<cmessageinfo anonid="message-box" />	
				<hbox flex="1" style="padding-left:5px;padding-right:5px;">
					<vbox width="250" style="border: thin inset #e3e3e3;">
						<toolbox class="change-toolbox-dark" style="height:25px; padding-top: 0px;">
							<toolbar class="change-toolbar">	
								<toolbarbutton anonid="multiTreeButton" class="module-selector"  image="{IconsBase}/small/modules.png" oncommand="refresh()" type="menu">
									<menupopup anonid="multiTreePopup" />
								</toolbarbutton>
								<spacer flex="1" />
								<label anonid="multiTreeTitle" collapsed="true" class="toolbarLabel"  style="font-size: 1.3em;"/>
							</toolbar>
						</toolbox>
						<cressourcestreeselector anonid="nav_tree" flex="1" xbl:inherits="disabled,collapsed,hidden,hideheader" />
					</vbox>
					<spacer width="5"/>
					<vbox flex="1" style="border: thin inset #e3e3e3; min-width: 200px">
						<toolbox class="change-toolbox-dark" style="height:25px; padding-top: 0px;">
							<toolbar class="change-toolbar">	
								<toolbarbutton anonid="searchButton" disabled="true" image="{IconsBase}/small/search.png" oncommand="toggleSearch()" 
								tooltiptext="&amp;modules.uixul.bo.general.ToggleSearchResourceModeEllipsis;"
								crop="end" label="&amp;modules.uixul.bo.general.ShowSearch;" />					
							</toolbar>
						</toolbox>
						<cressourceslistselector anonid="list_tree" flex="1" xbl:inherits="disabled,collapsed,hidden,hideheader"/>
						<splitter width="5" />
						<label class="change-toolbox-dark" style="max-height: 26px; min-height: 26px; margin: 0; padding: 5px;">
							${transui:m.catalog.bo.dialog.productselector.declinations,ucf}
						</label>
						<cressourceslistselector anonid="list_subproduct" xbl:inherits="disabled,collapsed,hidden,hideheader" style="min-height: 56px;" />
					</vbox>
					<spacer width="5"/>
					<vbox width="250" style="border: thin inset #e3e3e3;">
						<vbox xbl:inherits="collapsed=hide-list" flex="1">
							<spacer height="5" />
							<label value="&amp;modules.uixul.bo.dialog.Ressource-selectionLabel;"/>
							<grid anonid="selectedList" width="250" flex="1" style="overflow-y: scroll; overflow-x: hidden; margin: 0; padding: 0;">
								<columns>
									<column width="200" />
									<column width="20" />
								</columns>
								<rows anonid="document-rows">
								</rows>
							</grid>
						</vbox>		
						<label value="${transui:m.uixul.bo.dialog.ressource-preview,ucf,lab,attr}"/>
						<vbox width="250" height="200" align="center" pack="center" style="border: thin outset #e3e3e3;margin: 2px">
							<image anonid="previewimage" src="{IconsBase}/small/document.png" />
						</vbox>				
					</vbox>
				</hbox>
				<hbox pack="end" align="center">
					<button image="{IconsBase}/small/check.png" oncommand="onOk();" label="&amp;modules.uixul.bo.dialog.Apply;" />
				</hbox>
			</vbox>
		</xbl:content>
	</binding>
</bindings>